/*
HOW IT WORKS
In Star Wars Galaxy of Heroes characters are obtainable through shards. These shards accumulate and after a certain amount
they are upgradable to a star amount. The max amount of stars is 7. All characters have a max of 7 stars or 330 shards.
Some characters are obtainable through one or more locations known as a node. These nodes can be played 5 times each day.
You can choose to refresh the node to play 5 more times. 
These nodes contain the shards of a certain character and either award 1 or 2 shards.
Some characters can be obtained through nodes and shipments or are exclusive to shipments.
Shipments are a group of stores in which you buy 10 shards of a character using a type of currency.
Sometimes there are more than 10 shards some specific characters.
These shipments are rotated every couple of hours throughout the day.
There are around 256 characters some of which are not obtainable through either shipments or nodes.
All of the obtainabe characters can be "Farmed"/obtained in a certain amount of time depending on the battles done a day as well as->
if they are also obtainable through shipments.
Because of each characters unique location and obtainability they each have their own data
This data is used to calculate how long it wil take to farm based off of refresh amounts, and how many shards have already been obtained.
As of 11/20/2023



*/
#include<iostream>
#include<map>
#include<string>
#define maxshards 330
float droprate = .33;

struct FiveoFirst
{
    std::string Charactername;
    std::string Location;
    int Nodeamount, NodeShardamount, charactershipmentshardamount; 
};

int main()
{
    std::map<std::string, FiveoFirst> five01Map;
    five01Map["Ahsoka Tano"] = FiveoFirst { "Ahsoka Tano", "Fleet Shipment, Cantina Shipment, & (1-B Light)", 1, 2, 15};
    five01Map["Arc Trooper"] = FiveoFirst { "Arc Trooper", "((5-G Cantina))", 1, 2, 0};
    five01Map["CT-21-0408 ""Echo"""] = FiveoFirst { "CT-21-0408 Echo", "Fleet & Guild Activity", 0, 0, 15};//add quotes to trooper names
    five01Map["CT-555 ""Fives"""] = FiveoFirst { "CT-5555 Fives", "(2-D Dark), Cantina Currency, and Fleet", 1, 2, 15};
    five01Map["CT-7567 ""Rex"""] = FiveoFirst { "CT-7567 Rex", "Fleet and Guild Activity Shipments", 0, 0, 15};
    five01Map["General Skywalker"] = FiveoFirst { "General Skywalker", "Guild & Guild Events Store", 0, 0, 10};
    /*DATA FOR 501st
        FiveoFirst& ahoskatanoData = five01Map["Ahsoka Tano"];
        FiveoFirst& arctrooperData = five01Map["Arc Trooper"];
        FiveoFirst& ctechoData = five01Map["CT-21-0408 Echo"];
        FiveoFirst& ctfivesData = five01Map["CT-555 Fives"];
        FiveoFirst& ctrexData = five01Map["CT-7567 Rex"];
        FiveoFirst& GASData = five01Map["General Skywalker"];*/

//Ask user for character name and retrieve data
int shardsamt;
int starsamt;
int starsshards;
int shardsremaining;
int daystofarm;
int refreshamts;
    std::string askname;
    std::cout<<"What is the characters in game name AS IS?"<<std::endl;
    getline(std::cin, askname);
    std::cout<<"How many refreshes a day?"<<std::endl;
    std::cin >>refreshamts;
    std::cout<<"How many stars?"<<std::endl;
    std::cin >> starsamt;
    //calculates how many shards already obtained based on star level
        if (starsamt<=7 && starsamt>=0)
        {
            switch(starsamt)
            {
            case 7:
                starsshards = maxshards;
                break;
            case 6:
                starsshards = 230;
                break;
            case 5:
                starsshards = 145;
                break;
            case 4:
                starsshards = 80;
                break;
            case 3:
                starsshards = 50;
                break;
            case 2:
                starsshards =25;
                break;
            case 1:
                starsshards = 10;
                break;
            default:
                std::cout<<"Invalid star amount"<<std::endl;
            }
        }

    std::cout<<"How many shards?"<<std::endl;
    std::cin>>shardsamt;
    shardsremaining= maxshards-(shardsamt+starsshards); 
    
//map find character and data, also calculations
std::map<std::string, FiveoFirst>::iterator iter = five01Map.find(askname);
if(iter != five01Map.end()){
    std::cout << "Character: " << iter->first << std::endl;
    std::cout << "Data: " << iter->second.Charactername << ", Accessible through:" 
              << iter->second.Location << std::endl; 
              std::cout<<"Will obtain "<<shardsremaining<<" shards in "<< 
              (daystofarm = (shardsremaining)/
              ((iter->second.Nodeamount*5*refreshamts*droprate*iter->second.NodeShardamount)+(iter->second.charactershipmentshardamount)))
            <<" days." << std::endl;
} else {
    std::cout << "Character not found in the map." << std::endl;
}
    return 0;
}
